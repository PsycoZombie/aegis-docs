// Mocks generated by Mockito 5.4.6 from annotations
// in aegis_docs/test/features/auth/home/providers/home_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:io' as _i5;
import 'dart:typed_data' as _i6;

import 'package:aegis_docs/core/services/native_pdf_compression_service.dart'
    as _i2;
import 'package:aegis_docs/data/models/picked_file_model.dart' as _i7;
import 'package:aegis_docs/data/repositories/document_repository.dart' as _i3;
import 'package:flutter/material.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNativeCompressionResult_0 extends _i1.SmartFake
    implements _i2.NativeCompressionResult {
  _FakeNativeCompressionResult_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [DocumentRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDocumentRepository extends _i1.Mock
    implements _i3.DocumentRepository {
  MockDocumentRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<String>> listAllFolders() =>
      (super.noSuchMethod(
            Invocation.method(#listAllFolders, []),
            returnValue: _i4.Future<List<String>>.value(<String>[]),
          )
          as _i4.Future<List<String>>);

  @override
  _i4.Future<List<_i5.FileSystemEntity>> listWalletContents({
    String? folderPath,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#listWalletContents, [], {
              #folderPath: folderPath,
            }),
            returnValue: _i4.Future<List<_i5.FileSystemEntity>>.value(
              <_i5.FileSystemEntity>[],
            ),
          )
          as _i4.Future<List<_i5.FileSystemEntity>>);

  @override
  _i4.Future<List<_i5.File>> listEncryptedFiles() =>
      (super.noSuchMethod(
            Invocation.method(#listEncryptedFiles, []),
            returnValue: _i4.Future<List<_i5.File>>.value(<_i5.File>[]),
          )
          as _i4.Future<List<_i5.File>>);

  @override
  _i4.Future<void> createFolderInWallet({
    required String? folderName,
    String? parentFolderPath,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createFolderInWallet, [], {
              #folderName: folderName,
              #parentFolderPath: parentFolderPath,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteFolderFromWallet({required String? folderPath}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteFolderFromWallet, [], {
              #folderPath: folderPath,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> renameFileInWallet({
    required String? oldName,
    required String? newName,
    String? folderPath,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#renameFileInWallet, [], {
              #oldName: oldName,
              #newName: newName,
              #folderPath: folderPath,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> renameFolderInWallet({
    required String? oldPath,
    required String? newName,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#renameFolderInWallet, [], {
              #oldPath: oldPath,
              #newName: newName,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> saveEncryptedDocument({
    required String? fileName,
    required _i6.Uint8List? data,
    String? folderPath,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#saveEncryptedDocument, [], {
              #fileName: fileName,
              #data: data,
              #folderPath: folderPath,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i6.Uint8List?> loadDecryptedDocument({
    required String? fileName,
    String? folderPath,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#loadDecryptedDocument, [], {
              #fileName: fileName,
              #folderPath: folderPath,
            }),
            returnValue: _i4.Future<_i6.Uint8List?>.value(),
          )
          as _i4.Future<_i6.Uint8List?>);

  @override
  _i4.Future<void> deleteEncryptedDocument({
    required String? fileName,
    String? folderPath,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteEncryptedDocument, [], {
              #fileName: fileName,
              #folderPath: folderPath,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<(_i7.PickedFileModel?, bool)> pickImage() =>
      (super.noSuchMethod(
            Invocation.method(#pickImage, []),
            returnValue: _i4.Future<(_i7.PickedFileModel?, bool)>.value((
              null,
              false,
            )),
          )
          as _i4.Future<(_i7.PickedFileModel?, bool)>);

  @override
  _i4.Future<_i7.PickedFileModel?> pickPdf() =>
      (super.noSuchMethod(
            Invocation.method(#pickPdf, []),
            returnValue: _i4.Future<_i7.PickedFileModel?>.value(),
          )
          as _i4.Future<_i7.PickedFileModel?>);

  @override
  _i4.Future<List<(_i7.PickedFileModel?, bool)>> pickMultipleImages() =>
      (super.noSuchMethod(
            Invocation.method(#pickMultipleImages, []),
            returnValue: _i4.Future<List<(_i7.PickedFileModel?, bool)>>.value(
              <(_i7.PickedFileModel?, bool)>[],
            ),
          )
          as _i4.Future<List<(_i7.PickedFileModel?, bool)>>);

  @override
  _i4.Future<List<_i7.PickedFileModel>> pickAndSanitizeMultipleImagesForPdf() =>
      (super.noSuchMethod(
            Invocation.method(#pickAndSanitizeMultipleImagesForPdf, []),
            returnValue: _i4.Future<List<_i7.PickedFileModel>>.value(
              <_i7.PickedFileModel>[],
            ),
          )
          as _i4.Future<List<_i7.PickedFileModel>>);

  @override
  _i4.Future<String?> saveDocument(
    _i6.Uint8List? bytes, {
    required String? fileName,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#saveDocument, [bytes], {#fileName: fileName}),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<_i6.Uint8List?> exportDecryptedDocument({
    required String? fileName,
    String? folderPath,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#exportDecryptedDocument, [], {
              #fileName: fileName,
              #folderPath: folderPath,
            }),
            returnValue: _i4.Future<_i6.Uint8List?>.value(),
          )
          as _i4.Future<_i6.Uint8List?>);

  @override
  _i4.Future<_i6.Uint8List> resizeImage(
    _i6.Uint8List? imageBytes, {
    required int? width,
    required int? height,
    required String? outputFormat,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #resizeImage,
              [imageBytes],
              {#width: width, #height: height, #outputFormat: outputFormat},
            ),
            returnValue: _i4.Future<_i6.Uint8List>.value(_i6.Uint8List(0)),
          )
          as _i4.Future<_i6.Uint8List>);

  @override
  _i4.Future<_i6.Uint8List> compressImage(
    _i6.Uint8List? imageBytes, {
    int? quality = 85,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #compressImage,
              [imageBytes],
              {#quality: quality},
            ),
            returnValue: _i4.Future<_i6.Uint8List>.value(_i6.Uint8List(0)),
          )
          as _i4.Future<_i6.Uint8List>);

  @override
  _i4.Future<_i6.Uint8List?> cropImage(
    _i6.Uint8List? imageBytes, {
    required _i8.ThemeData? theme,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#cropImage, [imageBytes], {#theme: theme}),
            returnValue: _i4.Future<_i6.Uint8List?>.value(),
          )
          as _i4.Future<_i6.Uint8List?>);

  @override
  _i4.Future<_i6.Uint8List> changeImageFormat(
    _i6.Uint8List? imageBytes, {
    required String? originalFormat,
    required String? targetFormat,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #changeImageFormat,
              [imageBytes],
              {#originalFormat: originalFormat, #targetFormat: targetFormat},
            ),
            returnValue: _i4.Future<_i6.Uint8List>.value(_i6.Uint8List(0)),
          )
          as _i4.Future<_i6.Uint8List>);

  @override
  _i4.Future<_i6.Uint8List> convertImageToPdf(_i6.Uint8List? imageBytes) =>
      (super.noSuchMethod(
            Invocation.method(#convertImageToPdf, [imageBytes]),
            returnValue: _i4.Future<_i6.Uint8List>.value(_i6.Uint8List(0)),
          )
          as _i4.Future<_i6.Uint8List>);

  @override
  _i4.Future<_i6.Uint8List> convertImagesToPdf(
    List<_i6.Uint8List>? imageBytesList,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#convertImagesToPdf, [imageBytesList]),
            returnValue: _i4.Future<_i6.Uint8List>.value(_i6.Uint8List(0)),
          )
          as _i4.Future<_i6.Uint8List>);

  @override
  _i4.Future<List<_i6.Uint8List>> convertPdfToImages(
    _i6.Uint8List? pdfBytes, {
    String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #convertPdfToImages,
              [pdfBytes],
              {#password: password},
            ),
            returnValue: _i4.Future<List<_i6.Uint8List>>.value(
              <_i6.Uint8List>[],
            ),
          )
          as _i4.Future<List<_i6.Uint8List>>);

  @override
  _i4.Future<bool> isPdfEncrypted(_i6.Uint8List? pdfBytes) =>
      (super.noSuchMethod(
            Invocation.method(#isPdfEncrypted, [pdfBytes]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<_i6.Uint8List> lockPdf(
    _i6.Uint8List? pdfBytes, {
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#lockPdf, [pdfBytes], {#password: password}),
            returnValue: _i4.Future<_i6.Uint8List>.value(_i6.Uint8List(0)),
          )
          as _i4.Future<_i6.Uint8List>);

  @override
  _i4.Future<_i6.Uint8List> unlockPdf(
    _i6.Uint8List? pdfBytes, {
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#unlockPdf, [pdfBytes], {#password: password}),
            returnValue: _i4.Future<_i6.Uint8List>.value(_i6.Uint8List(0)),
          )
          as _i4.Future<_i6.Uint8List>);

  @override
  _i4.Future<_i6.Uint8List> changePdfPassword(
    _i6.Uint8List? pdfBytes, {
    required String? oldPassword,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #changePdfPassword,
              [pdfBytes],
              {#oldPassword: oldPassword, #newPassword: newPassword},
            ),
            returnValue: _i4.Future<_i6.Uint8List>.value(_i6.Uint8List(0)),
          )
          as _i4.Future<_i6.Uint8List>);

  @override
  _i4.Future<_i2.NativeCompressionResult> compressPdfWithNative({
    required String? filePath,
    required int? sizeLimit,
    required bool? preserveText,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#compressPdfWithNative, [], {
              #filePath: filePath,
              #sizeLimit: sizeLimit,
              #preserveText: preserveText,
            }),
            returnValue: _i4.Future<_i2.NativeCompressionResult>.value(
              _FakeNativeCompressionResult_0(
                this,
                Invocation.method(#compressPdfWithNative, [], {
                  #filePath: filePath,
                  #sizeLimit: sizeLimit,
                  #preserveText: preserveText,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.NativeCompressionResult>);

  @override
  _i4.Future<bool?> deleteBackupFromDrive() =>
      (super.noSuchMethod(
            Invocation.method(#deleteBackupFromDrive, []),
            returnValue: _i4.Future<bool?>.value(),
          )
          as _i4.Future<bool?>);

  @override
  _i4.Future<_i5.File?> downloadBackupFromDrive() =>
      (super.noSuchMethod(
            Invocation.method(#downloadBackupFromDrive, []),
            returnValue: _i4.Future<_i5.File?>.value(),
          )
          as _i4.Future<_i5.File?>);

  @override
  _i4.Future<void> backupWalletToDrive(String? masterPassword) =>
      (super.noSuchMethod(
            Invocation.method(#backupWalletToDrive, [masterPassword]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> restoreWalletFromBackupData({
    required _i5.File? backupFile,
    required String? masterPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#restoreWalletFromBackupData, [], {
              #backupFile: backupFile,
              #masterPassword: masterPassword,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
