// Mocks generated by Mockito 5.4.6 from annotations
// in aegis_docs/test/core/services/cloud_storage_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:googleapis/drive/v3.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAboutResource_0 extends _i1.SmartFake implements _i2.AboutResource {
  _FakeAboutResource_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAccessproposalsResource_1 extends _i1.SmartFake
    implements _i2.AccessproposalsResource {
  _FakeAccessproposalsResource_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAppsResource_2 extends _i1.SmartFake implements _i2.AppsResource {
  _FakeAppsResource_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeChangesResource_3 extends _i1.SmartFake
    implements _i2.ChangesResource {
  _FakeChangesResource_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeChannelsResource_4 extends _i1.SmartFake
    implements _i2.ChannelsResource {
  _FakeChannelsResource_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCommentsResource_5 extends _i1.SmartFake
    implements _i2.CommentsResource {
  _FakeCommentsResource_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDrivesResource_6 extends _i1.SmartFake
    implements _i2.DrivesResource {
  _FakeDrivesResource_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFilesResource_7 extends _i1.SmartFake implements _i2.FilesResource {
  _FakeFilesResource_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOperationsResource_8 extends _i1.SmartFake
    implements _i2.OperationsResource {
  _FakeOperationsResource_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePermissionsResource_9 extends _i1.SmartFake
    implements _i2.PermissionsResource {
  _FakePermissionsResource_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRepliesResource_10 extends _i1.SmartFake
    implements _i2.RepliesResource {
  _FakeRepliesResource_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRevisionsResource_11 extends _i1.SmartFake
    implements _i2.RevisionsResource {
  _FakeRevisionsResource_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTeamdrivesResource_12 extends _i1.SmartFake
    implements _i2.TeamdrivesResource {
  _FakeTeamdrivesResource_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [DriveApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockDriveApi extends _i1.Mock implements _i2.DriveApi {
  MockDriveApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AboutResource get about =>
      (super.noSuchMethod(
            Invocation.getter(#about),
            returnValue: _FakeAboutResource_0(this, Invocation.getter(#about)),
          )
          as _i2.AboutResource);

  @override
  _i2.AccessproposalsResource get accessproposals =>
      (super.noSuchMethod(
            Invocation.getter(#accessproposals),
            returnValue: _FakeAccessproposalsResource_1(
              this,
              Invocation.getter(#accessproposals),
            ),
          )
          as _i2.AccessproposalsResource);

  @override
  _i2.AppsResource get apps =>
      (super.noSuchMethod(
            Invocation.getter(#apps),
            returnValue: _FakeAppsResource_2(this, Invocation.getter(#apps)),
          )
          as _i2.AppsResource);

  @override
  _i2.ChangesResource get changes =>
      (super.noSuchMethod(
            Invocation.getter(#changes),
            returnValue: _FakeChangesResource_3(
              this,
              Invocation.getter(#changes),
            ),
          )
          as _i2.ChangesResource);

  @override
  _i2.ChannelsResource get channels =>
      (super.noSuchMethod(
            Invocation.getter(#channels),
            returnValue: _FakeChannelsResource_4(
              this,
              Invocation.getter(#channels),
            ),
          )
          as _i2.ChannelsResource);

  @override
  _i2.CommentsResource get comments =>
      (super.noSuchMethod(
            Invocation.getter(#comments),
            returnValue: _FakeCommentsResource_5(
              this,
              Invocation.getter(#comments),
            ),
          )
          as _i2.CommentsResource);

  @override
  _i2.DrivesResource get drives =>
      (super.noSuchMethod(
            Invocation.getter(#drives),
            returnValue: _FakeDrivesResource_6(
              this,
              Invocation.getter(#drives),
            ),
          )
          as _i2.DrivesResource);

  @override
  _i2.FilesResource get files =>
      (super.noSuchMethod(
            Invocation.getter(#files),
            returnValue: _FakeFilesResource_7(this, Invocation.getter(#files)),
          )
          as _i2.FilesResource);

  @override
  _i2.OperationsResource get operations =>
      (super.noSuchMethod(
            Invocation.getter(#operations),
            returnValue: _FakeOperationsResource_8(
              this,
              Invocation.getter(#operations),
            ),
          )
          as _i2.OperationsResource);

  @override
  _i2.PermissionsResource get permissions =>
      (super.noSuchMethod(
            Invocation.getter(#permissions),
            returnValue: _FakePermissionsResource_9(
              this,
              Invocation.getter(#permissions),
            ),
          )
          as _i2.PermissionsResource);

  @override
  _i2.RepliesResource get replies =>
      (super.noSuchMethod(
            Invocation.getter(#replies),
            returnValue: _FakeRepliesResource_10(
              this,
              Invocation.getter(#replies),
            ),
          )
          as _i2.RepliesResource);

  @override
  _i2.RevisionsResource get revisions =>
      (super.noSuchMethod(
            Invocation.getter(#revisions),
            returnValue: _FakeRevisionsResource_11(
              this,
              Invocation.getter(#revisions),
            ),
          )
          as _i2.RevisionsResource);

  @override
  _i2.TeamdrivesResource get teamdrives =>
      (super.noSuchMethod(
            Invocation.getter(#teamdrives),
            returnValue: _FakeTeamdrivesResource_12(
              this,
              Invocation.getter(#teamdrives),
            ),
          )
          as _i2.TeamdrivesResource);
}
